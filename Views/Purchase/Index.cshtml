@model Stock_keeping.Models.PurchaseList


@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid">
    <!-- Page-Title -->
    <div class="row">
        <div class="col-sm-12">
            <div class="page-title-box">
                <div class="float-end">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">Inventory</a></li>
                        <li class="breadcrumb-item"><a href="#">Tables</a></li>
                        <li class="breadcrumb-item active">Editable</li>
                    </ol>
                </div>
                <h4 class="page-title">Purchase</h4>
            </div>
            <!--end page-title-box-->
        </div>
        <!--end col-->
    </div>
    <!-- end page title end breadcrumb -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Purchase </h4>
                </div><!--end card-header-->
                <div class="card-body">
                    <div class="table-responsive">

                        <div class="supplier-div mb-4 w-50">
                            <span>Select Supplier</span>
                            <select id="supplierInput" value="" class="form-control" asp-items="@ViewBag.Supplier"></select>
                        </div>

                        <div class="date-div mb-4 w-50">
                            <span>Select Date</span>
                            <input class="form-control" id="datePicker"/>
                        </div>

                        <div class="mb-2">
                            <button type="button" class="btn btn-outline-primary btn-sm mb-1 mb-xl-0" data-bs-toggle="modal" data-bs-target="#purchaseCreateModal">Add New Product To List</button>
                        </div>
                        <div class="table-div">
                            <table class="table table-bordered">
                                <tr class="bg-primary">
                                    <th style="color:white;">
                                        Category Name
                                    </th>
                                    <th style="color:white;">
                                        Product
                                    </th>
                                    <th style="color:white;">
                                        Quntity
                                    </th>
                                    <th style="color:white;">
                                        Unit Cost(&#8358)
                                    </th>
                                    <th style="color:white;">
                                        Amount(&#8358)
                                    </th>
                                    <th style="color:white;">
                                        Discount(&#8358)
                                    </th>
                                    <th style="color:white;">
                                        Cost After Discount(&#8358)
                                    </th>
                                    <th style="color:white;">
                                        Tax(&#8358)
                                    </th>
                                    <th style="color:white;">
                                        Total(&#8358)
                                    </th>
                                    <th style="color:white;">
                                        Action
                                    </th>
                                </tr>
                                @foreach (var item in ViewBag.PurchaseList)
                                {
                                    <tr>
                                        <td>
                    
                                            @item.Category.Name
                                        </td>
                                        <td>
                                            @item.Product.Name
                                        </td>
                                        <td>
                                            @item.Quantity
                                        </td>
                                        <td>
                                            @item.Product.CostPrice
                                        </td>
                                        <td>
                                            @item.Amount
                                        </td>
                                        <td>
                                            @item.DiscountPrice
                                        </td>
                                        <td>
                                            @item.DiscountedCost
                                        </td>
                                        <td>
                                            @item.TaxPrice
                                        </td>
                                        <td>
                                            @item.Price
                                        </td>
                                        <td style="width:150px">
                                            <div class="btn-group w-75" role="group">
                                                <button class="btn btn-primary text-white mx-2" id="btnEdit" data-bs-toggle="modal" data-bs-target="#stockEditModal" title="Update Stock" selectedCategory="@item.Category.Name" selectedProduct="@item.Product.Id" selectedId="@item.Id" selectedQuantity="@item.Quantity" selectedUnitP="@item.Product.CostPrice" selectedAmount="@item.Amount" selectedDiscount="@item.DiscountPrice" selectedDiscountedC ="@item.DiscountedCost" selectedTax="@item.TaxPrice" selectedPrice="@item.Price">
                                                    <i class="bi bi-pencil-square"></i>Edit
                                                </button>
                                                <button class="btn btn-danger text-white mx-2" id="btnDelete" data-bs-toggle="modal" data-bs-target="#deleteModal" title="Delete Branch" selectedId="@item.Id">
                                                    <i class="bi bi-trash"></i>Delete
                                                </button>
                                            </div>
                                        </td>

                                    </tr>
                                }
                                <tr style="">
                                    <td style="color:white; background:#2ea80c;" colspan="4">
                                        Sum-Total(&#8358):
                                    </td>
                                    <td style="color:white; background:#2ea80c;" id="amountId">
                                        
                                    </td>
                                    <td style="color:white; background:#2ea80c;" id="discId">
                                        
                                    </td>
                                    <td style="color:white; background:#2ea80c;" id="dicCostId">
                                        
                                    </td>
                                    <td style="color:white; background:#2ea80c;" id="taxId">
                                        
                                    </td>
                                    <td style="color:white; background:#2ea80c;" id="totalCostId">
                                        
                                    </td>
                                    <td style="width:150px;">
                                        <div class="btn-group w-75">
                                             <button class="btn btn-small text-white mx-2" style="background:#2ea80c;">
                                                  <i class="bi bi-save"></i> Save
                                             </button>

                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div> <!-- end col -->
    </div> <!-- end row -->
    <!--creat form modal-->
    <!-- Modals -->

    <!-- Create modal -->
    <!-- Modal -->
    <div class="modal fade" id="purchaseCreateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Add Purchased Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                    <form id="stockFormData">
                        <div class="form-group mb-3">
                            <label>Category Name</label>
                            <input disabled class="form-control" id="categoryName" type="text" placeholder="Category Name"/>
                        </div>
                        <div class="form-group mb-3">
                            <label>Product Name</label>
                            <select class="form-control" id="productName" type="text" asp-items="@ViewBag.Product">
                                <option>-- --Select Product-- --</option>
                            </select>
                        </div>
                        <div class="form-group mb-3">
                            <label>Quantity</label>
                            <input class="form-control" type="number" min="1" id="quantity"/>
                        </div>
                        <div class="form-group mb-3">
                            <label>Unit Cost(&#8358)</label>
                            <input disabled class="form-control" id="unitCost" placeholder="Unit Cost">
                        </div>
                        <div class="form-group mb-3">
                            <label>Amount(&#8358)</label>
                            <input disabled class="form-control" id="amount" />
                        </div>
                        <div class="form-group mb-3">
                            <label>Discount%</label>
                            <input class="form-control" type="number" min="0" id="discount" placeholder="Discount in %">
                        </div>
                        <div class="form-group mb-3">
                            <label>Discount(&#8358)</label>
                            <input class="form-control" disabled type="number" min="0" id="discountPrice" placeholder="DiscountPrice">
                        </div>
                        <div class="form-group mb-3">
                            <label>Cost After Discount(&#8358)</label>
                            <input class="form-control" disabled type="number" id="priceWithDisc">
                        </div>
                        <div class="form-group mb-3">
                            <label>Tax%</label>
                            <input class="form-control" type="number" min="0" id="tax" placeholder="Tax in %">
                        </div>
                        <div class="form-group mb-3">
                            <label>Tax(&#8358)</label>
                            <input class="form-control" disabled type="number" min="0" id="taxPrice" placeholder="TaxPrice">
                        </div>
                        <div class="form-group mb-3">
                            <label>Total(&#8358)</label>
                            <input disabled class="form-control" id="total" type="number" placeholder="Total">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-primary">Add To List</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit modal -->
    <!-- Modal -->
    <div class="modal fade" id="stockEditModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Add Purchased Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                    <form id="stockEditFormData">
                        <div class="form-group mb-3">
                            <label>Category Name</label>
                            <input disabled class="form-control" id="editCategoryName" type="text" placeholder="Category Name"/>
                        </div>
                        <div class="form-group mb-3">
                            <label>Product Name</label>
                            <select class="form-control" id="editProductName" type="text" asp-items="@ViewBag.Product">
                                <option>-- --Select Product-- --</option>
                            </select>
                        </div>
                        <div class="form-group mb-3">
                            <label>Quantity</label>
                            <input class="form-control" type="number" min="1" id="editQuantity"/>
                        </div>
                        <div class="form-group mb-3">
                            <label>Unit Cost(&#8358)</label>
                            <input disabled class="form-control" id="editUnitCost" placeholder="Unit Cost">
                        </div>
                        <div class="form-group mb-3">
                            <label>Amount(&#8358)</label>
                            <input disabled class="form-control" id="editAmount" />
                        </div>
                        <div class="form-group mb-3">
                            <label>Discount%</label>
                            <input class="form-control" type="number" min="0" id="editDiscount" placeholder="Discount in %">
                        </div>
                        <div class="form-group mb-3">
                            <label>Discount(&#8358)</label>
                            <input class="form-control" disabled type="number" min="0" id="editDiscountPrice" placeholder="DiscountPrice">
                        </div>
                        <div class="form-group mb-3">
                            <label>Cost After Discount(&#8358)</label>
                            <input class="form-control" disabled type="number" id="editPriceWithDisc">
                        </div>
                        <div class="form-group mb-3">
                            <label>Tax%</label>
                            <input class="form-control" type="number" min="0" id="editTax" placeholder="Tax in %">
                        </div>
                        <div class="form-group mb-3">
                            <label>Tax(&#8358)</label>
                            <input class="form-control" disabled type="number" min="0" id="editTaxPrice" placeholder="TaxPrice">
                        </div>
                        <div class="form-group mb-3">
                            <label>Total(&#8358)</label>
                            <input disabled class="form-control" id="editTotal" type="number" placeholder="Total">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnEditSave" class="btn btn-primary">Save Edit</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Delete modal -->
    <!-- Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Delete Purchased Stock</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                    <span style="color:red;"><i class="bi bi-exclamation-circle"></i> Warning</span>
                    <h5>Are you sure you want to delete this item?</h5>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnDeleteSave" class="btn btn-danger">Delete</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    


    @*SCRIPT FOR ADDING SLASH FOR DATE*@
    @*<script>
        

        var date = document.getElementById('datePicker');

        function checkValue(str, max) {
            if (str.charAt(0) !== '0' || str == '00') {
            var num = parseInt(str);
            if (isNaN(num) || num <= 0 || num > max) num = 1;
            str = num > parseInt(max.toString().charAt(0)) 
                    && num.toString().length == 1 ? '0' + num : num.toString();
            };
            return str;
        };

        date.addEventListener('input', function(e) {
            this.type = 'text';
            var input = this.value;
            if (/\D\/$/.test(input)) input = input.substr(0, input.length - 3);
            var values = input.split('/').map(function(v) {
            return v.replace(/\D/g, '')
            });
            if (values[0]) values[0] = checkValue(values[0], 12);
            if (values[1]) values[1] = checkValue(values[1], 31);
            var output = values.map(function(v, i) {
            return v.length == 2 && i < 2 ? v + ' / ' : v;
            });
            this.value = output.join('').substr(0, 14);
        });
    </script>*@
    @*sSTOP INPUTS FROM REFRESHING*@
    <script>
        $("#supplierInput").on('change', function(){
            localStorage.setItem("supplierInput", $(this).val());
        })
        $("#datePicker").on('change', function(){
            localStorage.setItem("datePicker", $(this).val());
        })

        $(document).ready(function(){
            if($("#supplierInput").length){
                $("#supplierInput").val(localStorage.getItem("supplierInput"));
            }
            if($("#datePicker").length){
                $("#datePicker").val(localStorage.getItem("datePicker"));
            }
        })
    </script>




@*SCRIPT FOR PRICES AND GETTING PRODUCTS FOR CREATION*@
<script>
        
    $("#productName").change(function (){
        var selectedVal = $(this).val();
        var tax = $("#tax").val(0);
        $("#taxPrice").val(0);
        var discount = $("#discount").val(0);
        $("#discountPrice").val(0);


        $.ajax({
            type:"GET",
            dataType:'JSON',
            url:"/Purchase/GetProductUsingSelectedProduct",
            data: {productId : selectedVal},
            success:
                function(response){
                    var product = response.data;
                    console.log($("#categoryName"))
                    
                    $("#categoryName").val(product.category.name);
                    $("#unitCost").val(product.costPrice);

                },
            error:
                function(response){
                    alert("Error: " + response)
                }
        });
    })
    //EDIT PRICE WHEN QUANTITY CHANGE
    $("#quantity").change(function(){
        var productQuantity = $("#quantity").val();
        var unitCost = $("#unitCost").val();
        var amount = $("#amount");
        var totalPrice = $("#total");
        var tax = $("#tax").val(0);
        var discount = $("#discount").val(0);
        $("#taxPrice").val(0);
        $("#discountPrice").val(0);
        pSum = productQuantity * unitCost;

        $("#priceWithDisc").val(pSum);
        amount.val(pSum);

        totalPrice.val(pSum);

    })


    ////EDIT TOTAL WHEN DISCOUNT AND TAX CHANGES
    $("#discount, #tax").change(function(){
        var discount = $('#discount').val();
        var amount = parseFloat($("#amount").val());
        var tax = $("#tax").val();
        caldisc = (amount*discount)/100;
        var calcPWithDisc = (amount - caldisc);
        $("#priceWithDisc").val(calcPWithDisc.toFixed(2));
        $("#total").val(calcPWithDisc.toFixed(2));
        var pWithDisc = parseFloat($("#priceWithDisc").val());
        caltax = (pWithDisc*tax)/100;
        $("#taxPrice").val(caltax.toFixed(2));
        $("#discountPrice").val(caldisc.toFixed(2));
        var totalPrice = parseFloat(pWithDisc + parseFloat(caltax)).toFixed(2);
        $("#total").val(totalPrice);
    })

    //GETTING ALL TOTAL FORM THE CONTROLLER
    $(document).ready(function(){
        $.ajax({
            type:"GET",
            dataType:"JSON",
            url: "/Purchase/SolveTotalAmount",
            success: function(res){
                        $("#amountId").text(res.amount.toFixed(2));
                        $("#discId").text(res.discount.toFixed(2));
                        $("#dicCostId").text(res.dicsCost.toFixed(2));
                        $("#taxId").text(res.tax.toFixed(2));
                        $("#totalCostId").text(res.total.toFixed(2))
                     }
                
        })
    })

</script>


@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@


@*SCRIPT FOR PRICES AND GETTING PRODUCTS FOR EDIT*@
<script>
        
    $("#editProductName").change(function (){
        var selectedVal = $(this).val();
        var tax = $("#editTax").val(0);
        $("#editTaxPrice").val(0);
        var discount = $("#editDiscount").val(0);
        $("#editDiscountPrice").val(0);


        $.ajax({
            type:"GET",
            dataType:'JSON',
            url:"/Purchase/GetProductUsingSelectedProduct",
            data: {productId : selectedVal},
            success:
                function(response){
                    var product = response.data;
                    console.log($("#editCategoryName"))
                    
                    $("#editCategoryName").val(product.category.name);
                    $("#editUnitCost").val(product.costPrice);

                },
            error:
                function(response){
                    alert("Error: " + response)
                }
        });
    })
    //EDIT PRICE WHEN QUANTITY CHANGE
    $("#editQuantity").change(function(){
        var productQuantity = $("#editQuantity").val();
        var unitCost = $("#editUnitCost").val();
        var amount = $("#editAmount");
        var totalPrice = $("#editTotal");
        var tax = $("#editTax").val(0);
        var discount = $("#editDiscount").val(0);
        $("#editTaxPrice").val(0);
        $("#editDiscountPrice").val(0);
        pSum = productQuantity * unitCost;

        $("#editPriceWithDisc").val(pSum);
        amount.val(pSum);

        totalPrice.val(pSum);

    })


    ////EDIT TOTAL WHEN DISCOUNT CHANGES
    $("#editDiscount, #editTax").change(function(){
        var discount = $('#editDiscount').val();
        var amount = parseFloat($("#editAmount").val());
        var tax = $("#editTax").val();
        caldisc = (amount*discount)/100;
        var calcPWithDisc = (amount - caldisc);
        $("#editPriceWithDisc").val(calcPWithDisc.toFixed(2));
        $("#editTotal").val(calcPWithDisc.toFixed(2));
        $("#editDiscountPrice").val(caldisc.toFixed(2));
        var pWithDisc = parseFloat($("#editPriceWithDisc").val());
        caltax = (pWithDisc*tax)/100;
        $("#editTaxPrice").val(caltax.toFixed(2));
        var totalPrice = ( pWithDisc + parseFloat(caltax))
        $("#editTotal").val(totalPrice.toFixed(2));
    })

</script>

@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@
@*///////////////////////////////////////////////////////////*@



@*SCRIPT FOR ALL CRUD FUNCTIONS*@
    
<script>

     //ADDING CREATED STOCK TO LIST SCRIPTS
     $(document).ready(function(){
         $("#btnSave").click(function(event) {
             var selectedVal = $("#productName").val();
             event.preventDefault();
            $.ajax({
                type:"GET",
                dataType:'JSON',
                url:"/Purchase/GetProductUsingSelectedProduct",
                data: {productId : selectedVal},
                success:
                    function(response){
                        var product = response.data; 
                        var purchaseData = {
                            ProductId : selectedVal,
                            CategoryId : product.categoryId,
                            Quantity : stockFormData.quantity.value,
                            Amount : stockFormData.amount.value,
                            DiscountPrice : stockFormData.discountPrice.value,
                            DiscountedCost : stockFormData.priceWithDisc.value,
                            TaxPrice : stockFormData.taxPrice.value,
                            Price : stockFormData.total.value
                        }

                        $.ajax({
                             type: "POST",
                             url: "/Purchase/Create",
                             //data: JSON.stringify(PostCustomer),
                             data: purchaseData,
                             dataType: "json",
                             //contentType: 'application/json; charset=utf-8',
                             traditional: true,
                             success: function(r){

                                 if(r.msg == "success"){
                                      window.location.href="/Purchase/Index";
                                 }
                             }
                        })

                    },
                error:
                    function(response){
                        alert("Error: " + response)
                    }
            });
             
             

         })
     })

        ///////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////

     //SCRIPT FOR SAVING EDITED ITEM
     //EDIT STOCK ITEM SCRIPTS
    $(document).delegate("#btnEdit","click",function(e){

         Category = $(this).attr('selectedCategory');
         Product = $(this).attr('selectedProduct');
         UnitPrice = $(this).attr('selectedUnitP');
         Quantity = $(this).attr('selectedQuantity');
         Amount = $(this).attr('selectedAmount');
         Discount = $(this).attr('selectedDiscount');
         DiscountedCost = $(this).attr('selectedDiscountedC');
         Tax = $(this).attr('selectedTax');
         Price = $(this).attr('selectedPrice');
         Id = $(this).attr('selectedId');


         $("#editCategoryName").val(Category);
         var productName = $("#editProductName");
         $('#editQuantity').val(Quantity);
         $('#editUnitCost').val(UnitPrice);
         $('#editAmount').val(Amount);
         $('#editDiscountPrice').val(Discount);
         $('#editPriceWithDisc').val(DiscountedCost);
         $('#editTaxPrice').val(Tax);
         $("#editTotal").val(Price);

         const keys = Object.keys(productName);
         productName[keys[0]].value = Product;

        $("#btnEditSave").click(function(event) {
             var selectedVal = $("#editProductName").val();
             console.log(selectedVal)
             event.preventDefault();
            $.ajax({
                type:"GET",
                dataType:'JSON',
                url:"/Purchase/GetProductUsingSelectedProduct",
                data: {productId : selectedVal},
                success:
                    function(response){
                        var stock = response.data;
                        var stockData = {
                            Id : Id,
                            ProductId : selectedVal,
                            CategoryId : stock.categoryId,
                            Quantity : $('#editQuantity').val(),
                            Amount : $('#editAmount').val(),
                            DiscountPrice : $('#editDiscountPrice').val(),
                            DiscountedCost : $('#editPriceWithDisc').val(),
                            TaxPrice : $('#editTaxPrice').val(),
                            Price : $("#editTotal").val()
                        }

                        $.ajax({
                             type: "POST",
                             url: "/Purchase/Edit",
                             data: stockData,
                             dataType: "json",
                             //contentType: 'application/json; charset=utf-8',
                             traditional: true,
                             success: function(r){

                                 if(r.msg == "success"){
                                      window.location.href="/Purchase/Index";
                                 }
                             }
                        })

                    },
                error:
                    function(response){
                        alert("Error: " + response)
                    }
            });
 

         })
    })

  ///////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////


    //DELETE STOCK ITEM SCRIPTS
    $(document).delegate("#btnDelete","click",function(e){
        Id = $(this).attr('selectedId');
        console.log(Id)
        $("#btnDeleteSave").click(function(event) {
            event.preventDefault();

            var purchaseDataId = {
                Id: parseInt(Id),
            }
            console.log(purchaseDataId)
            $.ajax({
                    type: "DELETE",
                    url: "/Purchase/Delete",
                    data: purchaseDataId,
                    dataType: "json",
                    traditional: true,
                    success: function(r){

                        if(r.msg == "success"){
                                window.location.href="/Purchase/Index";
                        }
                    }
            })
        })
    })

</script>
}